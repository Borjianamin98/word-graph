version: "2"

services:
  namenode:
    image: hadoop-namenode:latest
    container_name: namenode
    hostname: namenode
    restart: always
    ports:
      - 50070:50070
      - 9100:9000
    volumes:
      - hadoop_namenode:/dfs/name
    environment:
      CLUSTER_NAME: storage
    env_file:
      - ./hadoop.env

  datanode:
    image: hadoop-datanode:latest
    container_name: datanode
    hostname: datanode
    restart: always
    ports:
      - 50010:50010 # Data transfer port
      - 50075:50075 # Download file from UI
    volumes:
      - hadoop_datanode:/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:50070"
    env_file:
      - ./hadoop.env
    depends_on:
      - namenode

  # resourcemanager:
  #   image: hadoop-resourcemanager:latest
  #   container_name: resourcemanager
  #   hostname: resourcemanager
  #   restart: always
  #   ports:
  #     - 9101:8088
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9000 namenode:50070 datanode:50075"
  #   env_file:
  #     - ./hadoop.env
  #   depends_on:
  #     - namenode
  #     - datanode

  # nodemanager:
  #   image: hadoop-nodemanager:latest
  #   container_name: nodemanager
  #   hostname: nodemanager
  #   restart: always
  #   ports:
  #     - 9102:8042
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9000 namenode:50070 datanode:50075 resourcemanager:8088"
  #   env_file:
  #     - ./hadoop.env
  #   depends_on:
  #     - resourcemanager

  # historyserver:
  #   image: hadoop-historyserver:latest
  #   container_name: historyserver
  #   hostname: historyserver
  #   restart: always
  #   ports:
  #     - 19888:19888
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9000 namenode:50070 datanode:50075 resourcemanager:8088"
  #   env_file:
  #     - ./hadoop.env
  #   depends_on:
  #     - resourcemanager

  spark-master:
    image: spark-master:latest
    container_name: spark-master
    hostname: spark-master
    restart: always
    ports:
      - "9103:8080" # Spark master web UI
      # - "7077:7077" Spark master port for communication

  spark-worker-1:
    image: spark-worker:latest
    container_name: spark-worker-1
    hostname: spark-worker-1
    mem_limit: 8g
    depends_on:
      - spark-master
    ports:
      - "9104:8081"
    environment:
      SPARK_MASTERS: spark://spark-master:7077

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - 2181:2181
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    environment:
      LANG: C.UTF-8
      LC_ALL: C.UTF-8
      TZ: Asia/Tehran
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: bitnami/kafka:2.8.1
    container_name: kafka
    hostname: kafka
    ports:
      - 9093:9093
    volumes:
      - kafka_data:/bitnami/kafka
    environment:
      LANG: C.UTF-8
      LC_ALL: C.UTF-8
      TZ: Asia/Tehran
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://0.0.0.0:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
      # Custom configurations
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "false"
    depends_on:
      - zookeeper

  mongodb:
    image: mongo:5.0.6
    container_name: mongo
    hostname: mongo
    environment:
      LANG: C.UTF-8
      LC_ALL: C.UTF-8
      TZ: Asia/Tehran
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db

  yake-server:
    image: yake-server:latest
    container_name: yake-server
    hostname: yake-server
    ports:
      - 5000:5000

volumes:
  hadoop_namenode:
  hadoop_datanode:
  zookeeper_data:
  kafka_data:
  mongodb_data:
